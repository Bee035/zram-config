#! /bin/bash

createZswap () {
	createZdevice
	mkswap /dev/zram$RAM_DEV
	if [ ! -z "$PRIORITY" ]
	then
		swapon -v -p $PRIORITY /dev/zram$RAM_DEV
	else
		echo "zram$RAM_DEV no swap_priority" >&1
	fi	
	if [ ! -z "$PAGE_CLUSTER" ]
	then
		sysctl vm.page-cluster=$PAGE_CLUSTER
	else
		echo "zram$RAM_DEV no page_cluster" >&1	
	fi
	if [ ! -z "$SWAPPINESS" ]
	then
		sysctl vm.swappiness=$SWAPPINESS
	else
		echo "zram$RAM_DEV no swappiness" >&1
	fi
}
	
createZdir () {
	if [ ! -z "$BIND_DIR" ]
	then
		mkdir -p $BIND_DIR
		if [ ! -z "$ZRAM_DIR" ]
		then
			mount --verbose --bind $ZRAM_DIR/ $BIND_DIR/
			mount --verbose --make-private $BIND_DIR/
			createZdevice
			mke2fs -v -t ext4 /dev/zram$RAM_DEV
			mount --verbose --types ext4 -o nosuid,noexec,nodev /dev/zram$RAM_DEV $ZRAM_DIR/
			syncFromDisk
		else
			echo "No mount dir in ztab" >&2
		fi
	else
		echo "No bind dir in ztab" >&2
	fi
}
	
createZlog () {
	createZdir
	if [ ! -z "$OLDLOG_DIR" ]
	then
		cp -arvf /etc/logrotate.conf ./logrotate.conf.bak
		sed -i "/^weekly.*/i olddir $OLDLOG_DIR" /etc/logrotate.conf
		sed -i "/^weekly.*/i createolddir 755 root root" /etc/logrotate.conf
		sed -i "/^weekly.*/i renamecopy" /etc/logrotate.conf
	else
		echo "createZlog no oldlog dir in ztab"
	fi
}
	
createZdevice () {
	# Check Zram Class created
	if [ ! -d "/sys/class/zram-control" ]; then
        modprobe --verbose zram
        RAM_DEV='0'
	else
        RAM_DEV=$(cat /sys/class/zram-control/hot_add)
	fi
	if [ ! -z "$ALG" ]
	then
		echo "$ALG" > /sys/block/zram$RAM_DEV/comp_algorithm
	else
		echo "zram$RAM_DEV no comp_algorithm" >&1
	fi
	if [ ! -z "$MEM_SIZE" ]
	then
		echo "$MEM_SIZE" > /sys/block/zram$RAM_DEV/mem_limit
	else
		echo "zram$RAM_DEV no mem_limit" >&1
	fi
	if [ ! -z "$DISK_SIZE" ]
	then
		echo "$DISK_SIZE" > /sys/block/zram$RAM_DEV/disksize
	else
		echo "zram$RAM_DEV no disksize" >&2
	fi
	echo "zram$RAM_DEV created comp_algorithm=$ALG mem_limit=$MEM_SIZE disksize=$DISK_SIZE" >&1
}

syncFromDisk () {
	if cp -arvf $BIND_DIR -T $ZRAM_DIR
	then
		echo "syncFromDisk $BIND_DIR to $ZRAM_DIR complete"  >&1
	else
		echo "Error syncFromDisk $BIND_DIR to $ZRAM_DIR failure" >&2
	fi
}

syncToDisk () {
	if cp -arvfu $ZRAM_DIR -T $BIND_DIR
	then
		echo "syncToDisk $ZRAM_DIR to $BIND_DIR complete" >&1
	else
		echo "Error syncFromDisk $ZRAM_DIR to $BIND_DIR failure" >&2
	fi			
}


case "$1" in
	start)
		file=./ztab.conf
		while read -r line; do
			case "$line" in
				"#"*)
					# Skip comment line
					continue
					;;

				"")
					# Skip empty line
					continue
					;;

				*)
					set -- $line
					echo "ztab create $1 $2 $3 $4 $5 $6 $7 $8 $9" >&1
					ALG=$2
					MEM_SIZE=$3
					DISK_SIZE=$4
					case "$1" in
						swap)
							PRIORITY=$5
							PAGE_CLUSTER=$6
							SWAPPINESS=$7
							createZswap
							;;
						dir)
							ZRAM_DIR=$5
							BIND_DIR=$6
							createZdir
							;;
						log)
							ZRAM_DIR=$5
							BIND_DIR=$6
							OLDLOG_DIR=$7
							createZlog
							;;
					esac
					;;
			esac
		done < "$file"
		;;
esac
